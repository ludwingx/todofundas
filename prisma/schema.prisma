
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// model Product {
//   id             String       @id @default(uuid())
//   name           String
//   model          String       // modelo de celular compatible
//   color          String
//   stock          Int
//   minStock       Int          @default(5) // stock mínimo para alertas
//   priceRetail    Float        // precio por menor
//   priceWholesale Float        // precio por mayor
//   costPrice      Float        // precio de costo
//   warehouse      Warehouse    @relation(fields: [warehouseId], references: [id])
//   warehouseId    String
//   type           ProductType  @relation(fields: [typeId], references: [id])
//   typeId         String
//   supplier       Supplier?    @relation(fields: [supplierId], references: [id])
//   supplierId     String?
//   sales          Sale[]
//   purchases      Purchase[]
//   createdAt      DateTime     @default(now())
//   updatedAt      DateTime     @updatedAt

//   @@index([model, color])
//   @@index([warehouseId])
//   @@index([typeId])
//   @@index([stock])
// }

// model Warehouse {
//   id       String    @id @default(uuid())
//   name     String
//   location String
//   products Product[]
// }

// model ProductType {
//   id       String    @id @default(uuid())
//   name     String    // "Funda", "Vidrio", etc.
//   products Product[]
// }

// model Supplier {
//   id        String     @id @default(uuid())
//   name      String
//   contact   String?
//   email     String?
//   phone     String?
//   address   String?
//   products  Product[]
//   purchases Purchase[]
//   createdAt DateTime   @default(now())
//   updatedAt DateTime   @updatedAt
// }

// model Sale {
//   id           String    @id @default(uuid())
//   productId    String
//   product      Product   @relation(fields: [productId], references: [id])
//   quantity     Int
//   unitPrice    Float
//   totalPrice   Float
//   customerName String?
//   customerPhone String?
//   paymentMethod String   @default("efectivo") // efectivo, tarjeta, transferencia
//   notes        String?
//   createdAt    DateTime  @default(now())
//   updatedAt    DateTime  @updatedAt

//   @@index([createdAt])
//   @@index([productId])
// }

// model Purchase {
//   id          String    @id @default(uuid())
//   productId   String
//   product     Product   @relation(fields: [productId], references: [id])
//   supplierId  String
//   supplier    Supplier  @relation(fields: [supplierId], references: [id])
//   quantity    Int
//   unitPrice   Float
//   totalPrice  Float
//   invoiceNumber String?
//   notes       String?
//   createdAt   DateTime  @default(now())
//   updatedAt   DateTime  @updatedAt

//   @@index([createdAt])
//   @@index([productId])
//   @@index([supplierId])
// }

model User {
  id          String   @id @default(uuid())
  username    String   @unique
  password    String   // hash de la contraseña
  name        String
  role        String   @default("user") // admin, user
  isActive    Boolean  @default(true)
  lastLoginAt DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([username])
  @@index([isActive])
}
